#!/usr/bin/env python
# coding: utf-8
import pefile
import os
import math
from PIL import Image

class exe_visual:
    
    def visualization_malware(self,dataset, outputfile,imagesize, width=0):
        global size
        if(width == 0):
            size = len(dataset)
            width = math.ceil( math.sqrt(size) )

        heigher = int(size / width) + 1

        image = Image.new("L", (width, heigher))
        image.putdata(dataset)
        image = image.resize((imagesize,imagesize),Image.ANTIALIAS)
        imagename = outputfile + ".png"
        image.save(imagename)
        #image.show()
 

    def make_png(self,inputpath, imagesize=256, section=""):
        files = []
        if os.path.isfile(inputpath):
            files.append(inputpath)
        elif os.path.isdir(inputpath):
            for file in os.listdir(inputpath):
                if file.endswith(".exe") or file.endswith(".vir"):
                    files.append(inputpath + "/" + file)
        else:
            raise Exception(inputpath + " is not File or directory")
        
        for file in files:
            try:
                pe = pefile.PE(file)
                data = bytearray()
                for section in pe.sections: 
                    name = section.Name
                    if not section:
                        if section.Name.decode().rstrip('\x00') == section:
                            data = data + section.get_data()
                    else:
                        data = data + section.get_data()
                self.visualization_malware(dataset=data,imagesize=imagesize,outputfile=file)
            except Exception as e:
                print('Exception catch ' + file, e)
